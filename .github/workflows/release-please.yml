name: Release Please

on:
  push:
    branches: 
      - main
      - develop

jobs:
  clean_versions:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: sed no beta
        if: github.ref_name == 'main'
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          sed -i 's/-beta[^"]*//g' version.txt .release-please-manifest.json
          git add .
          if [[ `git diff --cached --exit-code` ]]; then
            git commit -m "chore: remove beta tags"
            git push
          fi

  release:
    runs-on: ubuntu-latest
    needs: clean_versions
    outputs:
      release-please: ${{ steps.please.outputs.releases_created }}
    steps:
      - name: Release, please
        id: please
        uses: google-github-actions/release-please-action@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          target-branch: ${{ github.ref_name }}
          config-file: release-please-${{ github.ref_name }}-config.json

  merge:
    runs-on: ubuntu-latest
    needs: release
    if: github.ref_name == 'main' && needs.release.outputs.release-please
    steps:
      - uses: actions/checkout@v4
        with:
          ref: develop
      
      - name: merge main
        run: |
          git fetch origin
          git config user.name github-actions
          git config user.email github-actions@github.com
          git merge origin/main
          git commit -m "chore: merge main"
          git push
        